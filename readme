# üõí Modelo de Banco de Dados - E-Commerce

## üìò Descri√ß√£o do Projeto
Este projeto apresenta o **modelo conceitual e l√≥gico** de um banco de dados para um sistema de **E-Commerce**, desenvolvido como parte de um **desafio de modelagem**.  
O objetivo foi estruturar as entidades, relacionamentos e regras de neg√≥cio que representam o funcionamento de um com√©rcio eletr√¥nico, incluindo clientes, pedidos, produtos, fornecedores e estoque.

## üß© Objetivo do Desafio
Refinar o modelo original, acrescentando novos requisitos de neg√≥cio:

1. **Cliente PJ e PF:**  
   Uma conta pode ser Pessoa F√≠sica ou Pessoa Jur√≠dica ‚Äî mas **n√£o pode ser as duas**.  
   > Implementado por meio das tabelas `Cliente_PF` e `Cliente_PJ`, ligadas 1:1 √† tabela `Cliente`.

2. **Pagamento:**  
   Um pedido pode ter **mais de uma forma de pagamento**.  
   > Modelado com as tabelas `Forma_Pagamento` e `Pedido_has_Pagamento` (rela√ß√£o N:N).

3. **Entrega:**  
   Cada pedido possui uma **entrega** com **status** e **c√≥digo de rastreio**.  
   > Criada a tabela `Entrega`, associada 1:1 √† tabela `Pedido`.

---

## üß± Estrutura do Modelo

### Tabelas Principais
| Tabela | Descri√ß√£o |
|--------|------------|
| **Cliente** | Armazena os dados base do cliente e define o tipo (PF/PJ). |
| **Cliente_PF** | Dados espec√≠ficos de pessoa f√≠sica (CPF, Data de Nascimento). |
| **Cliente_PJ** | Dados espec√≠ficos de pessoa jur√≠dica (CNPJ, Raz√£o Social). |
| **Produto** | Cadastro de produtos com categoria, descri√ß√£o e valor. |
| **Pedido** | Representa a compra realizada pelo cliente. |
| **Entrega** | Informa√ß√µes sobre o envio, status e c√≥digo de rastreio do pedido. |
| **Forma_Pagamento** | Tipos de pagamento dispon√≠veis (Cart√£o, Pix, Boleto etc.). |
| **Pedido_has_Pagamento** | Rela√ß√£o N:N entre pedido e forma de pagamento. |
| **Fornecedor / Estoque / Terceiro** | Estrutura de fornecimento, vendedores e controle de estoque. |

---

## üîó Relacionamentos Principais

| Rela√ß√£o | Tipo | Descri√ß√£o |
|----------|------|-----------|
| Cliente ‚Üî Cliente_PF | 1:1 | Um cliente pode ser PF. |
| Cliente ‚Üî Cliente_PJ | 1:1 | Um cliente pode ser PJ. |
| Pedido ‚Üî Entrega | 1:1 | Cada pedido possui uma entrega. |
| Pedido ‚Üî Forma_Pagamento | N:N | Um pedido pode ter v√°rias formas de pagamento. |
| Produto ‚Üî Pedido | N:N | Um pedido pode conter v√°rios produtos. |
| Produto ‚Üî Estoque | N:N | Controle de quantidades em estoque. |

---

## üßÆ Modelo L√≥gico (Resumo das Tabelas)

```sql
CREATE TABLE Cliente (
  idCliente INT PRIMARY KEY,
  Tipo ENUM('PF','PJ'),
  Endereco VARCHAR(100)
);

CREATE TABLE Cliente_PF (
  idCliente INT PRIMARY KEY,
  CPF VARCHAR(14),
  DataNascimento DATE,
  FOREIGN KEY (idCliente) REFERENCES Cliente(idCliente)
);

CREATE TABLE Cliente_PJ (
  idCliente INT PRIMARY KEY,
  CNPJ VARCHAR(18),
  RazaoSocial VARCHAR(60),
  FOREIGN KEY (idCliente) REFERENCES Cliente(idCliente)
);

CREATE TABLE Forma_Pagamento (
  idFormaPagamento INT PRIMARY KEY,
  Tipo VARCHAR(30)
);

CREATE TABLE Pedido_has_Pagamento (
  Pedido_idPedido INT,
  FormaPagamento_idFormaPagamento INT,
  Valor FLOAT,
  PRIMARY KEY (Pedido_idPedido, FormaPagamento_idFormaPagamento),
  FOREIGN KEY (Pedido_idPedido) REFERENCES Pedido(idPedido),
  FOREIGN KEY (FormaPagamento_idFormaPagamento) REFERENCES Forma_Pagamento(idFormaPagamento)
);

CREATE TABLE Entrega (
  idEntrega INT PRIMARY KEY,
  Pedido_idPedido INT,
  Status VARCHAR(45),
  CodigoRastreio VARCHAR(45),
  DataEnvio DATE,
  DataEntregaPrevista DATE,
  FOREIGN KEY (Pedido_idPedido) REFERENCES Pedido(idPedido)
);


üñºÔ∏è Diagrama EER

O diagrama EER completo reflete todas as entidades, relacionamentos e regras de integridade.


üß† Tecnologias Utilizadas

MySQL Workbench para modelagem do banco de dados

SQL ANSI para defini√ß√£o das tabelas e relacionamentos

GitHub para versionamento e documenta√ß√£o
